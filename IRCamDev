
'Scratchwork
'Sam

' Configure pins for digital operation (uncomment as needed).
' These settings are intended as simple examples.  For more detail,
' see the appropriate device datasheet for register descriptions.
'ANSEL =  %00000000  ' 16F88, 16F688, 16F690, 16F88x
'ANSELH = %00000000  ' 16F690, 16F88x
'ADCON1 = %00000111  ' 16F87x, 16F87xA, 18F452
'ADCON1 = %00001111  ' 18F4620 
DEFINE OSC 16
DEfine DEBUG_REG PORTB  
DEfine DEBUGIN_REG PORTB
DEFINE DEBUG_BIT 4 'B4 port for serial
DEFINE DEBUGIN_BIT 5
DEFINE DEBUG_BAUD 19200
DEFINE DEBUG_MODE 1
DEFINE DEBUGIN_MODE 1
define DEBUG_PACING 100
DEFINE I2C_INTERNAL 1


SCL1     var PORTC.5
SDA1    var PORTC.6
IR_1_CONT con %11010000
IR_2_CONT con %11010010
IR_3_CONT con %11010000
IR_4_CONT con %11010010
IR_5_CONT con %11010000
IR_6_CONT con %11010010
IR_7_CONT con %11010000
IR_8_CONT con %11010010
IR_9_CONT con %11010000



'ANSELB.0 = 0
'TRISB.0 = 0
'ANSELB.4 = 0
'TRISB.4 = 0
'ANSELD=0
'ANSELD=0
'TRISD.1=0
ANSELC.5=0       'Configure Clock line 
ANSELC.6=0       'Configure Data line 

LOW PORTD.1
PAUSE 100

HIGH PORTD.1
PAUSE 100
'Setting up dummy arrays to emulate IR cam data
LED         vAR PORTD.1
x           var byte
temp        var long
addr        VAR BYTE
value       var byte 
i           var byte
j           var byte
therm_low   var byte
therm_high  var byte
pos         var byte
pix_temp    var byte[64]
MoonCams    var byte[9]
SunCams     var byte[9]
EarthCams   var byte[9]
Cam1Raw     var byte[128]
Cam2Raw     var byte[128]
Cam3Raw     var byte[128]
Cam4Raw     var byte[128]
Cam5Raw     var byte[128]
Cam6Raw     var byte[128]
Cam7Raw     var byte[128]
Cam8Raw     var byte[128]
Cam9Raw     var byte[128]
CamSums     var long[9]
CamAvgs     var long[9]
CamStd      var long[9]
earthVector var word[2]
Quadrants   var long[36]
tempArray   var long [64]
CamArray1   var long[64]
CamArray2   var long[64]
CamArray3   var long[64]
CamArray4   var long[64]
CamArray5   var long[64]
CamArray6   var long[64]
CamArray7   var long[64]
CamArray8   var long[64]
CamArray9   var long[64]

LOW PORTD.1
main:
    'gosub getIndividualCam
    'gosub protocolController
     'gosub pixelLoop
     gosub getIRData
    debugin [Wait("@")]
    goto main 
'subroutines------------

getIRData:   
    gosub reset
    'debugin [Wait("@")]
    'Make array of dummmy data to standin for IR Camera data
    For x = 0 to 63
        'Lookup x, [0,1,1,3,5,9,18,21], Temp
        CamArray1(x) = x-30
        CamArray2(x) = 2'x+2
        CamArray3(x) = 30'2*x
        CamArray4(x) = 10'x+6
        CamArray5(x) = 10'3*x  'Cam5 has the highest values
        CamArray6(x) = 48'x+5
        CamArray7(x) = 10'x+3
        CamArray8(x) = 20
        CamArray9(x) = 25
        'debug "X - ", dec x, " - " , dec CamArray9(x), 10
        next x
   high PORTD.1
   pause 500
   gosub getAvgs
   gosub getStd
   'gosub getOneHots
   'gosub printOut
   gosub getQuadrants
   gosub getVector
   pause 500 
   LOW PORTD.1
   RETURN
   'goto main
 
'-----------------------
getStd:   

    for x=0 to 63
        'CAM1-------
        if CamArray1(x)>CamAvgs(0) then
            tempArray(x) = CamArray1(x)-CamAvgs(0)
            'debug dec x, " ", dec tempArray(x), " = ", dec CamArray1(x), " - ", dec CamAvgs(0), 10
        else 
            tempArray(x) = CamAvgs(0)-CamArray1(x)
            'debug dec x, " ", dec tempArray(x), " = ", dec CamArray1(x), " - ", dec CamAvgs(0), 10
        endif
        'debug dec CamArray1(x), " - ", dec CamStd(0), " = ", dec tempArray(x), 10
        'debug dec CamStd(0), 10
        CamStd(0) = tempArray(x)+CamStd(0)
        'debug dec CamStd(0), 10, 10
        
        'CAM2------
        if CamArray2(x)>CamAvgs(1) then
            tempArray(x) = CamArray2(x)-CamAvgs(1)
        else 
            tempArray(x) = CamAvgs(1)-CamArray2(x)
        endif
        'debug dec CamArray1(x), " - ", dec CamAvgs(0), " = ", dec tempArray(x), 10
        CamStd(1) = tempArray(x)+CamStd(1)
        
        'CAM3------
        if CamArray3(x)>CamAvgs(2) then
            tempArray(x) = CamArray3(x)-CamAvgs(2)
        else 
            tempArray(x) = CamAvgs(2)-CamArray3(x)
        endif
        'debug dec CamArray1(x), " - ", dec CamAvgs(0), " = ", dec tempArray(x), 10
        CamStd(2) = tempArray(x)+CamStd(2)
        
        'CAM4------
        if CamArray4(x)>CamAvgs(3) then
            tempArray(x) = CamArray4(x)-CamAvgs(3)
        else 
            tempArray(x) = CamAvgs(3)-CamArray4(x)
        endif
        'debug dec CamArray1(x), " - ", dec CamAvgs(0), " = ", dec tempArray(x), 10
        CamStd(3) = tempArray(x)+CamStd(3)
        
        'CAM5------
        if CamArray5(x)>CamAvgs(4) then
            tempArray(x) = CamArray5(x)-CamAvgs(4)
        else 
            tempArray(x) = CamAvgs(4)-CamArray5(x)
        endif
        'debug dec CamArray1(x), " - ", dec CamAvgs(0), " = ", dec tempArray(x), 10
        CamStd(4) = tempArray(x)+CamStd(4)
        
        'CAM6------
        if CamArray6(x)>CamAvgs(5) then
            tempArray(x) = CamArray6(x)-CamAvgs(5)
        else 
            tempArray(x) = CamAvgs(5)-CamArray6(x)
        endif
        'debug dec CamArray1(x), " - ", dec CamAvgs(0), " = ", dec tempArray(x), 10
        CamStd(5) = tempArray(x)+CamStd(5)
        
        'CAM7------
        if CamArray7(x)>CamAvgs(6) then
            tempArray(x) = CamArray7(x)-CamAvgs(6)
        else 
            tempArray(x) = CamAvgs(6)-CamArray7(x)
        endif
        'debug dec CamArray1(x), " - ", dec CamAvgs(0), " = ", dec tempArray(x), 10
        CamStd(6) = tempArray(x)+CamStd(6)
        
        'CAM8------
        if CamArray8(x)>CamAvgs(7) then
            tempArray(x) = CamArray8(x)-CamAvgs(7)
        else 
            tempArray(x) = CamAvgs(7)-CamArray8(x)
        endif
        'debug dec CamArray1(x), " - ", dec CamAvgs(0), " = ", dec tempArray(x), 10
        CamStd(7) = tempArray(x)+CamStd(7)

        'CAM9------
        if CamArray9(x)>CamAvgs(8) then
            tempArray(x) = CamArray9(x)-CamAvgs(8)
        else 
            tempArray(x) = CamAvgs(8)-CamArray9(x)
        endif
        CamStd(8) = tempArray(x)+CamStd(8)
        next x
        debug 10, 10
       
       for x=0 to 8
        debug dec x, " - ", dec CamStd(x), 10
        next x       

    for x=0 to 8
        'debug "STD-PRE: ", dec CamStd(x)
        CamStd(x) = sqr CamStd(x)
        'debug " STD-SQRT: ", dec CamStd(x), 10
        next x
return
'----------------------
getIndividualCam:
   x = 2
   pos = 0 
   select case x
   case 1
        debug "1", 10
        for i=0 to 127
            i2cread SDA1, SCL1, IR_1_CONT, addr, [Cam1Raw[i]]
            next i
            'Convert to temp for each pixel
        for j=0 to 63
            CamArray1[j]=(Cam1Raw[pos]+Cam1Raw[pos+1]*256)/4
            pos = pos+2
            next j 
   case 2
        debug "2", 10 
   case 3
        debug "3", 10 
   end select
 
return
'-----------------------
pixelLoop:
    'Get raw data - low and high byte for each pixel  
    addr = 128
    for i=0 to 127
        low led
        i2cread SDA1, SCL1, IR_1_CONT, addr, [Cam1Raw[i]]
        'i2cread SDA2, SCL2, IR_2_CONT, addr, [Cam2Raw[i]]
        'i2cread SDA3, SCL3, IR_3_CONT, addr, [Cam3Raw[i]]
        'i2cread SDA4, SCL4, IR_4_CONT, addr, [Cam4Raw[i]]
        'i2cread SDA5, SCL5, IR_5_CONT, addr, [Cam5Raw[i]]
        'i2cread SDA6, SCL6, IR_6_CONT, addr, [Cam6Raw[i]]
        'i2cread SDA7, SCL7, IR_7_CONT, addr, [Cam7Raw[i]]
        'i2cread SDA8, SCL8, IR_8_CONT, addr, [Cam8Raw[i]]
        'i2cread SDA9, SCL9, IR_9_CONT, addr, [Cam9Raw[i]]
        'debug " ",dec raw_value[i]
        addr = addr+1
        high led
    next i 
    debug,10
    
    'Convert to temp for each pixel
    pos = 0
    'debugin [wait("BEG")]
    for j=0 to 63
        CamArray1[j]=(Cam1Raw[pos]+Cam1Raw[pos+1]*256)/4
        pos = pos+2
        debug " ", dec CamArray1[j]
    next j
    debug 10, 10
return
 
 
 
 '-----------------------
 reset:
    for x = 0 to 8
        CamSums(x) = 0
        CamAvgs(x) = 0
        CamStd(x) = 0
        MoonCams(x) = 0
        SunCams(x) = 0
        EarthCams(x) = 0
        next x

    'for x = 0 to 8
    '    debug "X- ", dec x, " - ", dec CamSums(x), 10
    '    CamArray1(x) = 0
     '   CamArray2(x) = 0
     '   CamArray3(x) = 0
     '   CamArray4(x) = 0
     '   CamArray5(x) = 0
     '   CamArray6(x) = 0
     '   CamArray7(x) = 0
     '   CamArray8(x) = 0
     '   CamArray9(x) = 0
     '   next x
        
return
'-----------------------------
getOneHots:
    for x = 0 to 8
        if (CamAvgs(x) < 200) then 
            MoonCams(x) = 1
            SunCams(x) = 0
            EarthCams(x) = 0
            debug "Moon - ", dec x, " - Avg: ", dec CamAvgs(x), 13, 10
        endif
        if (CamAvgs(x) > 447) AND (CamAvgs(x) < 600) then 
            MoonCams(x) = 0
            SunCams(x) = 1
            EarthCams(x) = 0
            debug "Sun - ", dec x, " - Avg: ", dec CamAvgs(x), 13, 10
        endif  
        if (CamAvgs(x) > 1647) then
            MoonCams(x) = 0
            SunCams(x) = 0
            EarthCams(x) = 1   
            debug "Earth - ", dec x, " -Avg: ", dec CamAvgs(x), 13, 10
        endif
        next x

return
'-----------------------------
getAvgs:
    gosub reset
    for x = 0 to 63
     'debug "Before1: ", dec x, " - ", dec CamSums(8), 10
     'Cam1 below
     CamArray1(x) = 2047 + (16*CamArray1(x))
     CamArray2(x) = 2047 + (16*CamArray2(x))
     CamArray3(x) = 2047 + (16*CamArray3(x))
     CamArray4(x) = 2047 + (16*CamArray4(x))
     CamArray5(x) = 2047 + (16*CamArray5(x))
     CamArray6(x) = 2047 + (16*CamArray6(x))
     CamArray7(x) = 2047 + (16*CamArray7(x))
     CamArray8(x) = 2047 + (16*CamArray8(x))
     CamArray9(x) = 2047 + (16*CamArray9(x))


    'debug "Before2: ", dec x, " - ", dec CamSums(8), 10
    CamSums(0)= CamArray1(x) + CamSums(0)
    CamSums(1)= CamArray2(x) + CamSums(1)
    CamSums(2)= CamArray3(x) + CamSums(2)
    CamSums(3)= CamArray4(x) + CamSums(3)
    CamSums(4)= CamArray5(x) + CamSums(4)
    CamSums(5)= CamArray6(x) + CamSums(5)
    CamSums(6)= CamArray7(x) + CamSums(6)
    CamSums(7)= CamArray8(x) + CamSums(7)
    CamSums(8)= CamArray9(x) + CamSums(8)
    'debug "After: ", dec x, " - ", dec CamSums(8), 10, 10
    next x

    CamAvgs(0) = CamSums(0) / 64
    CamAvgs(1) = CamSums(1) / 64
    CamAvgs(2) = CamSums(2) / 64
    CamAvgs(3) = CamSums(3) / 64
    CamAvgs(4) = CamSums(4) / 64
    CamAvgs(5) = CamSums(5) / 64
    CamAvgs(6) = CamSums(6) / 64
    CamAvgs(7) = CamSums(7) / 64
    CamAvgs(8) = CamSums(8) / 64

'    for x=0 to 8
'        debug "AVGS: ", dec x, " - ", dec CamAvgs(x), 10
'        next x

return

'----------------
printOut:
    'for x=0 to 63
     '   debug dec CamArray1(x), " "
      '  next x
    'debug "Cam Sum: "
    'for x=0 to 8
     '   debug dec CamSums(x)  , " "
      '  next x
    'debug 10

    debug "Cam Avgs: "
    for x=0 to 8
        debug dec CamAvgs(x)  , " ", 10 
        next x
    debug 10
    
'    debug "Moon: "
'    for x=0 to 8
'        debug dec MoonCams(x) , " "
'        next x
'    debug 10
'   debug "Sun: "
'    for x=0 to 8
'        debug dec SunCams(x), " "
'        next x
'    debug 10
'    debug "Earth: " 
'   for x=0 to 8
'        debug dec EarthCams(x), " "
'        next x
'    debug 10, 10, 10
return

'-----------------
getQuadrants:
     for x = 0 to 35
        Quadrants(x) = 0
        next x 

   for x = 0 to 63
   'Quadrant I below
    if (x>3) and (x<8) or (x>11) and (x<16) or (x>19) and (x<24) or (x>27) and (x<32)then
        temp = Quadrants(0)
        Quadrants(0) = temp + CamArray1(x)+100
        'debug dec Quadrants(0), 10
        
        temp = Quadrants(4)
        Quadrants(4) = temp + CamArray2(x)+100
        'debug dec x, " - ", dec temp, " - ", dec Quadrants(4), " - ", dec CamArray2(x), 10
        
        temp = Quadrants(8)
        Quadrants(8) = temp + CamArray3(x)+100
       'debug dec x, " - ", dec temp, " - ", dec Quadrants(8), " - ", dec CamArray3(x), 10
       
        temp = Quadrants(12)
        Quadrants(12) = temp + CamArray4(x)+100
        'debug dec x, " - ", dec temp, " - ", dec Quadrants(12), " - ", dec CamArray4(x), 10
        
        temp = Quadrants(16)
        Quadrants(16) = temp + CamArray5(x)+100
        'debug dec x, " - ", dec temp, " - ", dec Quadrants(16), " - ", dec CamArray5(x), 10
        
        temp = Quadrants(20)
        Quadrants(20) = temp + CamArray6(x)+100                                                   
        'debug dec x, " - ", dec temp, " - ", dec Quadrants(20), " - ", dec CamArray6(x), 10
        
        temp = Quadrants(24)
        Quadrants(24) = temp + CamArray7(x)+100
        'debug dec x, " - ", dec temp, " - ", dec Quadrants(24), " - ", dec CamArray7(x), 10
        
        temp = Quadrants(28)
        Quadrants(28) = temp + CamArray8(x)+100
        'debug dec x, " - ", dec temp, " - ", dec Quadrants(28), " - ", dec CamArray8(x), 10
          
        temp = Quadrants(32)
        Quadrants(32) = temp + CamArray9(x)+100
        'debug dec x, " - ", dec temp, " - ", dec Quadrants(32), " - ", dec CamArray9(x), 10  
    endif
    
    'Quadrant II below
    if (x<4) or (x>7) and (x<12) or (x>15) and (x<20) or (x>23) and (x<28)then
        temp = Quadrants(1)
        Quadrants(1) = temp + CamArray1(x)
        'debug dec x, " - ", dec temp, " - ", dec Quadrants(1), " - ", dec CamArray1(x), 10
        
        temp = Quadrants(5)
        Quadrants(5) = temp + CamArray2(x)
        'debug dec x, " - ", dec temp, " - ", dec Quadrants(5), " - ", dec CamArray2(x), 10
        
        temp = Quadrants(9)
        Quadrants(9) = temp + CamArray3(x)
       'debug dec x, " - ", dec temp, " - ", dec Quadrants(9), " - ", dec CamArray3(x), 10
       
        temp = Quadrants(13)
        Quadrants(13) = temp + CamArray4(x)
        'debug dec x, " - ", dec temp, " - ", dec Quadrants(13), " - ", dec CamArray4(x), 10
        
        temp = Quadrants(17)
        Quadrants(17) = temp + CamArray5(x)
        'debug dec x, " - ", dec temp, " - ", dec Quadrants(17), " - ", dec CamArray5(x), 10
        
        temp = Quadrants(21)
        Quadrants(21) = temp + CamArray6(x)
        'debug dec x, " - ", dec temp, " - ", dec Quadrants(21), " - ", dec CamArray6(x), 10
        
        temp = Quadrants(25)
        Quadrants(25) = temp + CamArray7(x)
        'debug dec x, " - ", dec temp, " - ", dec Quadrants(25), " - ", dec CamArray7(x), 10
        
        
        temp = Quadrants(29)
        Quadrants(29) = temp + CamArray8(x)
        'debug dec x, " - ", dec temp, " - ", dec Quadrants(29), " - ", dec CamArray8(x), 10 
         
        temp = Quadrants(33)
        Quadrants(33) = temp + CamArray9(x)
        'debug dec x, " - ", dec temp, " - ", dec Quadrants(33), " - ", dec CamArray9(x), 10 
    endif 
    
       'Quadrant III below
    if (x>31) and (x<36) or (x>39) and (x<44) or (x>47) and (x<52) or (x>55) and (x<60)then
        temp = Quadrants(2)
        Quadrants(2) = temp + CamArray1(x)
        'debug dec x, " - ", dec temp, " - ", dec Quadrants(2), " - ", dec CamArray1(x), 10
        
        temp = Quadrants(6)
        Quadrants(6) = temp + CamArray2(x)
        'debug dec x, " - ", dec temp, " - ", dec Quadrants(6), " - ", dec CamArray2(x), 10
        
        temp = Quadrants(10)
        Quadrants(10) = temp + CamArray3(x)
       'debug dec x, " - ", dec temp, " - ", dec Quadrants(10), " - ", dec CamArray3(x), 10
       
        temp = Quadrants(14)
        Quadrants(14) = temp + CamArray4(x)
        'debug dec x, " - ", dec temp, " - ", dec Quadrants(14), " - ", dec CamArray4(x), 10
        
        temp = Quadrants(18)
        Quadrants(18) = temp + CamArray5(x)
        'debug dec x, " - ", dec temp, " - ", dec Quadrants(18), " - ", dec CamArray5(x), 10
        
        temp = Quadrants(22)
        Quadrants(22) = temp + CamArray6(x)
        'debug dec x, " - ", dec temp, " - ", dec Quadrants(22), " - ", dec CamArray6(x), 10
        
        temp = Quadrants(26)
        Quadrants(26) = temp + CamArray7(x)
        'debug dec x, " - ", dec temp, " - ", dec Quadrants(26), " - ", dec CamArray7(x), 10
        
        temp = Quadrants(30)
        Quadrants(30) = temp + CamArray8(x)
        'debug dec x, " - ", dec temp, " - ", dec Quadrants(30), " - ", dec CamArray8(x), 10
          
        temp = Quadrants(34)
        Quadrants(34) = temp + CamArray9(x)
        'debug dec x, " - ", dec temp, " - ", dec Quadrants(34), " - ", dec CamArray9(x), 10 
        endif
        
       'Quadrant IV below
    if (x>35) and (x<40) or (x>43) and (x<48) or (x>51) and (x<56) or (x>59) and (x<64)then
        temp = Quadrants(3)
        Quadrants(3) = temp + CamArray1(x)+100
        'debug dec x, " - ", dec temp, " - ", dec Quadrants(3), " - ", dec CamArray1(x), 10
        
        temp = Quadrants(7)
        Quadrants(7) = temp + CamArray2(x)+100
        'debug dec x, " - ", dec temp, " - ", dec Quadrants(7), " - ", dec CamArray2(x), 10
        
        temp = Quadrants(11)
        Quadrants(11) = temp + CamArray3(x)+100
       'debug dec x, " - ", dec temp, " - ", dec Quadrants(11), " - ", dec CamArray3(x), 10
       
        temp = Quadrants(15)
        Quadrants(15) = temp + CamArray4(x)+100
        'debug dec x, " - ", dec temp, " - ", dec Quadrants(15), " - ", dec CamArray4(x), 10
        
        temp = Quadrants(19)
        Quadrants(19) = temp + CamArray5(x)+100
        'debug dec x, " - ", dec temp, " - ", dec Quadrants(19), " - ", dec CamArray5(x), 10
        
        temp = Quadrants(23)
        Quadrants(23) = temp + CamArray6(x)+100
        'debug dec x, " - ", dec temp, " - ", dec Quadrants(23), " - ", dec CamArray6(x), 10
        
        temp = Quadrants(27)
        Quadrants(27) = temp + CamArray7(x)+100
        'debug dec x, " - ", dec temp, " - ", dec Quadrants(27), " - ", dec CamArray7(x), 10
        
        temp = Quadrants(31)
        Quadrants(31) = temp + CamArray8(x)+100
        'debug dec x, " - ", dec temp, " - ", dec Quadrants(31), " - ", dec CamArray8(x), 10  
        
        temp = Quadrants(35)
        Quadrants(35) = temp + CamArray9(x)+100
        'debug dec x, " - ", dec temp, " - ", dec Quadrants(35), " - ", dec CamArray9(x), 10 
        endif
    next x
    
   for x = 0 to 35
    'debug dec x, " - ", dec Quadrants(x), 10
    Quadrants(x) = Quadrants(x)/16  'average per pixel 
    'debug "Avg - ", dec Quadrants(x), 10, 10
    next x
return  

'-----------------
getVector:
    'Horizontal Component - the cameras are split into 2 sections resulting in 8 horizontal sections
    'We determine the highest avg section and convert that into a angle in degrees and store in earthVector[0]
    'The angles are split such that the center of Cam 5 is 0°, due to there only being 8 sections the angle is calculated
    'for the center of each section. The angles for each section are as follows:
    'Cam5 Section 1 - 338°, Cam5 Section 2 - 23°
    'Cam6 Section 1 - 68°,  Cam6 Section 2 - 113° 
    'Cam7 Section 1 - 158°, Cam7 Section 2 - 203°
    'Cam8 Section 1 - 248°, Cam8 Section 2 - 293° 
    temp = Quadrants(17)+Quadrants(18)   'first section camera 5
    earthVector[0]=0
    'compare to second section camera 5 
    if (Quadrants(16)+Quadrants(19)) > temp then 
        earthVector[0]=1
        temp = Quadrants(16)+Quadrants(19)
        endif
    'compare to first section camera 6   
    if (Quadrants(21)+Quadrants(22)) > temp then 
        earthVector[0]=2
        temp = Quadrants(21)+Quadrants(22)
        endif  
    'compare to second section camera 6    
    if (Quadrants(20)+Quadrants(23)) > temp then 
        earthVector[0]=3
        temp = Quadrants(20)+Quadrants(23)
        endif   
    'compare to first section camera 7    
    if (Quadrants(25)+Quadrants(26)) > temp then 
        earthVector[0]=4
        temp = Quadrants(25)+Quadrants(26)
        endif 
    'compare to second section camera 7    
    if (Quadrants(24)+Quadrants(27)) > temp then 
        earthVector[0]=5
        temp = Quadrants(24)+Quadrants(27)
        endif 
    'compare to first section camera 8    
    if (Quadrants(29)+Quadrants(30)) > temp then 
        earthVector[0]=6
        temp = Quadrants(29)+Quadrants(30)
        endif 
    'compare to second section camera 8    
    if (Quadrants(28)+Quadrants(31)) > temp then 
        earthVector[0]=7
        temp = Quadrants(28)+Quadrants(31)
        endif 
      'debug dec (Quadrants(17)+Quadrants(18)), 10
      'debug dec (Quadrants(16)+Quadrants(19)), 10
      'debug dec (Quadrants(21)+Quadrants(22)), 10
      'debug dec (Quadrants(20)+Quadrants(23)), 10
      'debug dec (Quadrants(25)+Quadrants(26)), 10
      'debug dec (Quadrants(24)+Quadrants(27)), 10
      'debug dec (Quadrants(29)+Quadrants(30)), 10
      'debug dec (Quadrants(28)+Quadrants(31)), 10
      'debug "Horizontal Result: ", dec earthVector[0], 10
      
      for i=0 to 35
        debug dec i, " - ", dec Quadrants(i), 10
        next i
      
      'Vertical Component
      'Compare the average of Cams1-4, located on -Z Face, Cam9, located on opposite +Z face, and the top and bottom 
      'sections of the Cam with the highest section from the horizontal plane (calculated above)
       temp = (CamAvgs[0]+CamAvgs[1]+CamAvgs[2]+CamAvgs[3])/4
       earthVector[1] = 0
       'debug dec CamAvgs[0], " ", dec CamAvgs[1], " ", dec CamAvgs[2], " ", dec CamAvgs[3], 10
       earthVector[0]=6
       
     'checking the vertical components on the side of cam 5
     if earthVector[0]=0 or earthVector[0]=1 then 
        if ((Quadrants(17)+Quadrants(16))/2) > temp then
            earthVector[1]=1
            temp = ((Quadrants(17)+Quadrants(16))/2)
            endif
        if ((Quadrants(18)+Quadrants(19))/2) > temp then
            earthVector[1]=2
            temp = ((Quadrants(18)+Quadrants(19))/2)
            endif   
        if ((Quadrants(32)+Quadrants(32))/2) > temp then
            earthVector[1]=3
            temp = ((Quadrants(32)+Quadrants(33))/2)
            endif   
        if ((Quadrants(32)+Quadrants(33)+Quadrants(34)+Quadrants(35))/4) > temp then
            earthVector[1]=4
            temp = (Quadrants(32)+Quadrants(33)+Quadrants(34)+Quadrants(35))/4
            endif
        'Checking if standard deviation is low implying whole Earth is in view
        if CamStd(4) < 500 then 
            earthVector[1]=5
            endif
        endif
     
     'checking the vertical components on the side of cam 6   
     if earthVector[0]=2 or earthVector[0]=3 then 
        if ((Quadrants(20)+Quadrants(21))/2) > temp then
            earthVector[1]=1
            temp = ((Quadrants(20)+Quadrants(21))/2)
            endif
        if ((Quadrants(22)+Quadrants(23))/2) > temp then
            earthVector[1]=2
            temp = ((Quadrants(22)+Quadrants(23))/2)
            endif
        if ((Quadrants(34)+Quadrants(35))/2) > temp then
            earthVector[1]=3
            temp = ((Quadrants(34)+Quadrants(35))/2)
            endif   
        if ((Quadrants(32)+Quadrants(33)+Quadrants(34)+Quadrants(35))/4) > temp then
            earthVector[1]=4
            temp = (Quadrants(32)+Quadrants(33)+Quadrants(34)+Quadrants(35))/4
            endif
        if CamStd(5) < 500 then 
            earthVector[1]=5
            endif
        endif
        
     'checking the vertical components on the side of cam 7  
     if earthVector[0]=4 or earthVector[0]=5 then 
        if ((Quadrants(25)+Quadrants(24))/2) > temp then
            earthVector[1]=1
            temp = ((Quadrants(25)+Quadrants(24))/2)
            endif
        if ((Quadrants(26)+Quadrants(27))/2) > temp then
            earthVector[1]=2
            temp = ((Quadrants(22)+Quadrants(23))/2)
            endif
        if ((Quadrants(32)+Quadrants(35))/2) > temp then
            earthVector[1]=3
            temp = ((Quadrants(34)+Quadrants(35))/2)
            endif   
        if ((Quadrants(32)+Quadrants(33)+Quadrants(34)+Quadrants(35))/4) > temp then
            earthVector[1]=4
            temp = (Quadrants(32)+Quadrants(33)+Quadrants(34)+Quadrants(35))/4
            endif
        if CamStd(6) < 500 then 
            earthVector[1]=5
            endif
        endif
        
     'checking the vertical components on the side of cam 8  
     if earthVector[0]=6 or earthVector[0]=7 then 
        if ((Quadrants(28)+Quadrants(29))/2) > temp then
            earthVector[1]=1
            temp = ((Quadrants(28)+Quadrants(29))/2)
            endif
        if ((Quadrants(30)+Quadrants(31))/2) > temp then
            earthVector[1]=2
            temp = ((Quadrants(30)+Quadrants(31))/2)
            endif
        if ((Quadrants(33)+Quadrants(34))/2) > temp then
            earthVector[1]=3
            temp = ((Quadrants(34)+Quadrants(35))/2)
            endif   
        if ((Quadrants(32)+Quadrants(33)+Quadrants(34)+Quadrants(35))/4) > temp then
            earthVector[1]=4
            temp = (Quadrants(32)+Quadrants(33)+Quadrants(34)+Quadrants(35))/4      
            endif
        if CamStd(7) < 500 then 
            earthVector[1]=5
            endif
        endif

      'Vertical angles 
      select case earthVector[1]
        case 0
            earthVector[1] = 0
        case 1
            earthVector[1] = 60
        case 2
            earthVector[1] = 120
        case 3
            earthVector[1] = 150
        case 4
            earthVector[1] = 180
        case 5
            earthVector[1] = 90 'Earth is straight on facing camera
      end select

    'Cam5 Section 1 - 338°, Cam5 Section 2 - 23°
    'Cam6 Section 1 - 68°,  Cam6 Section 2 - 113° 
    'Cam7 Section 1 - 158°, Cam7 Section 2 - 203°
    'Cam8 Section 1 - 248°, Cam8 Section 2 - 293°
 
       
       'Convert to horitzontal angles
       select case earthVector[0]
        case 0                  
            earthVector[0] = 338
        case 1
            earthVector[0] = 23
        case 2
            earthVector[0] = 68
        case 3
            earthVector[0] = 113
        case 4
            earthVector[0] = 158
        case 5
            earthVector[0] = 203
        case 6
            earthVector[0] = 248
        case 7
            earthVector[0] = 293
       end select
      
      
       debug "earthVector ", dec earthVector[0], " " , dec earthVector[1], 10    

      
return
   
   
   
   
   
